[
    {
        "disabled": false, 
        "info": "", 
        "type": "tab", 
        "id": "81ad2d46.ce21a", 
        "label": "Flow 1"
    }, 
    {
        "tls": "", 
        "closeQos": "0", 
        "cleansession": true, 
        "name": "mqtt.newhook.co.uk", 
        "birthPayload": "", 
        "willTopic": "", 
        "willPayload": "", 
        "closePayload": "", 
        "willQos": "0", 
        "broker": "mqtt.newhook.co.uk", 
        "clientid": "", 
        "id": "ed0605a1.842778", 
        "closeTopic": "", 
        "usetls": true, 
        "compatmode": false, 
        "birthTopic": "", 
        "z": "", 
        "type": "mqtt-broker", 
        "port": "8883", 
        "birthQos": "0", 
        "keepalive": "60"
    }, 
    {
        "wires": [], 
        "complete": false, 
        "y": 257, 
        "active": true, 
        "x": 541, 
        "z": "81ad2d46.ce21a", 
        "type": "debug", 
        "id": "99f66270.6b954", 
        "name": ""
    }, 
    {
        "repeat": "", 
        "name": "", 
        "id": "46a7ecfa.49f4c4", 
        "topic": "", 
        "wires": [
            [
                "548c1b18.676824"
            ]
        ], 
        "y": 257, 
        "x": 141, 
        "z": "81ad2d46.ce21a", 
        "type": "inject", 
        "payload": "", 
        "once": false
    }, 
    {
        "wires": [
            [
                "99f66270.6b954"
            ]
        ], 
        "name": "Format timestamp", 
        "outputs": 1, 
        "func": "// Create a Date object from the payload\nvar date = new Date(msg.payload);\n// Change the payload to be a formatted Date string\nmsg.payload = date.toString();\n// Return the message so it can be sent on\nreturn msg;", 
        "y": 257, 
        "x": 341, 
        "z": "81ad2d46.ce21a", 
        "type": "function", 
        "id": "548c1b18.676824"
    }, 
    {
        "wires": [
            [
                "97745e74.b2c4f"
            ]
        ], 
        "qos": "2", 
        "name": "blinkt", 
        "broker": "ed0605a1.842778", 
        "topic": "pimoroni/blinkt", 
        "y": 322, 
        "x": 141, 
        "z": "81ad2d46.ce21a", 
        "type": "mqtt in", 
        "id": "2022988a.c08e38"
    }, 
    {
        "wires": [], 
        "console": false, 
        "name": "", 
        "tosidebar": true, 
        "y": 391, 
        "tostatus": false, 
        "active": true, 
        "x": 498, 
        "z": "81ad2d46.ce21a", 
        "type": "debug", 
        "id": "b06e2985.ad1248", 
        "complete": "false"
    }, 
    {
        "wires": [
            [
                "b06e2985.ad1248"
            ]
        ], 
        "name": "count words", 
        "outputs": 1, 
        "noerr": 0, 
        "func": "var outputMsgs = [];\nvar wordMap = {};\nvar sentence = msg.payload.replace(/[.,-\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\");\nsentence = sentence.replace(/\\s{2,}/g,\" \");\nvar words = sentence.split(\" \");\nfor (var i = 0; i < words.length; i++) {\n  var lowerCaseWord = words[i].toLowerCase();\n  if (!wordMap[lowerCaseWord]) {\n    wordMap[lowerCaseWord] = 1;\n  } else {\n    wordMap[lowerCaseWord] = wordMap[lowerCaseWord] + 1;\n  }\n}\nfor (var prop in wordMap) {\n  if( wordMap.hasOwnProperty( prop ) ) {\n    outputMsgs.push({payload:{word:prop,count:wordMap[prop]}});\n  }\n}\nreturn [outputMsgs];", 
        "y": 391, 
        "x": 313, 
        "z": "81ad2d46.ce21a", 
        "type": "function", 
        "id": "97745e74.b2c4f"
    }, 
    {
        "wires": [
            []
        ], 
        "name": "process colour value", 
        "outputs": 1, 
        "noerr": 0, 
        "func": "var colour = msg.payload;\ncolour = colour.replace('rgb(', '');\ncolour = colour.replace(')', '');\nmsg.payload =  colour;\nreturn msg;", 
        "y": 504, 
        "x": 345, 
        "z": "81ad2d46.ce21a", 
        "type": "function", 
        "id": "a806aa9b.90ee28"
    }
]
